{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/rita/Documentos/github/app-loja/mobile/app-store/src/context/auth.tsx\";\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nvar AuthContext = createContext({});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    function loadStorageData() {\n      var storageToken;\n      return _regeneratorRuntime.async(function loadStorageData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@token\"));\n\n            case 2:\n              storageToken = _context.sent;\n\n              if (storageToken) {\n                setToken(storageToken);\n                setLoading(false);\n              } else {\n                setLoading(false);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadStorageData();\n  }, []);\n\n  function signOut() {\n    return _regeneratorRuntime.async(function signOut$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      signed: !!token,\n      signOut: signOut,\n      loading: loading,\n      token: ''\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, children);\n};\nexport default AuthContext;","map":{"version":3,"sources":["/home/rita/Documentos/github/app-loja/mobile/app-store/src/context/auth.tsx"],"names":["React","createContext","useState","useEffect","AsyncStorage","AuthContext","AuthProvider","children","token","setToken","loading","setLoading","loadStorageData","getItem","storageToken","signOut","clear","signed"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;SACSC,Y;AAST,IAAMC,WAAW,GAAGJ,aAAa,CAAkB,EAAlB,CAAjC;AAEA,OAAO,IAAMK,YAAsB,GAAG,SAAzBA,YAAyB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAC3BL,QAAQ,CAAgB,IAAhB,CADmB;AAAA;AAAA,MAC/CM,KAD+C;AAAA,MACxCC,QADwC;;AAAA,mBAEzBP,QAAQ,CAAC,IAAD,CAFiB;AAAA;AAAA,MAEhDQ,OAFgD;AAAA,MAEvCC,UAFuC;;AAIvDR,EAAAA,SAAS,CAAC,YAAK;AACd,aAAeS,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAC4BR,YAAY,CAACS,OAAb,CAAqB,QAArB,CAD5B;;AAAA;AACOC,cAAAA,YADP;;AAGC,kBAAIA,YAAJ,EAAkB;AACjBL,gBAAAA,QAAQ,CAACK,YAAD,CAAR;AACAH,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACA,eAHD,MAGK;AACJA,gBAAAA,UAAU,CAAC,KAAD,CAAV;AACA;;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWAC,IAAAA,eAAe;AACf,GAbQ,EAaN,EAbM,CAAT;;AAeA,WAAeG,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOX,YAAY,CAACY,KAAb,EADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SACC,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAC,CAACT,KAAZ;AAAmBO,MAAAA,OAAO,EAAPA,OAAnB;AAA4BL,MAAAA,OAAO,EAAPA,OAA5B;AAAqCF,MAAAA,KAAK,EAAE;AAA5C,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QADL,CADD;AAKA,CA5BM;AA+BP,eAAeF,WAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { AsyncStorage } from 'react-native';\n\ninterface AuthContextData{\n  signed: boolean;\n  token: string | null;\n  loading: boolean;\n  signOut(): void; \n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n\tconst [ token, setToken ] = useState<string | null>(null);\n\tconst [loading, setLoading] = useState(true);\n\n\tuseEffect(()=> {\n\t\tasync function loadStorageData(){\n\t\t\tconst storageToken = await AsyncStorage.getItem(\"@token\");\n\n\t\t\tif (storageToken) {\n\t\t\t\tsetToken(storageToken);\n\t\t\t\tsetLoading(false);\n\t\t\t}else{\n\t\t\t\tsetLoading(false);\n\t\t\t}\t\n\t\t}\n\n\t\tloadStorageData();\n\t}, []);\n\n\tasync function signOut(){\n\t\tawait AsyncStorage.clear();\n\t}\n\n\treturn (\n\t\t<AuthContext.Provider value={{ signed: !!token, signOut, loading, token: ''}}>\n    \t\t{children}\n  \t\t</AuthContext.Provider>\n\t);\n}\n\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}