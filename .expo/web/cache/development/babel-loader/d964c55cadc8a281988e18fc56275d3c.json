{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/rita/Documentos/github/app-loja/mobile/app-store/src/pages/login/index.tsx\";\nimport React, { useState } from 'react';\nimport { Container, Title, SubTitle, ViewLogin, InputLogin, ButtonForgotPassword, TitleButtonForgotPassword, ButtonSubmit, TitleButtonSubmit } from \"../../component/login\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { useNavigation } from '@react-navigation/native';\nimport Api from \"../../services\";\nimport { Entypo } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nexport default function Login() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var submit = function submit() {\n    var response;\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(email != '' && password != '')) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Api.post(\"/login\", {\n              email: email,\n              password: password\n            }));\n\n          case 3:\n            response = _context.sent;\n\n            if (!response.data.token) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@token\", response.data.token));\n\n          case 7:\n            navigation.reset({\n              routes: [{\n                name: 'Home'\n              }]\n            });\n            _context.next = 11;\n            break;\n\n          case 10:\n            Alert.alert(\"Acesso negado\");\n\n          case 11:\n            _context.next = 14;\n            break;\n\n          case 13:\n            Alert.alert(\"Opps\", \"Preencha todos os dados.\");\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \" Fa\\xE7a login \"), React.createElement(SubTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \" Informe os dados abaixo \"), React.createElement(ViewLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Entypo, {\n    name: \"email\",\n    size: 15,\n    color: \"#3465d9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), React.createElement(InputLogin, {\n    placeholder: \"Email:\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }\n  })), React.createElement(ViewLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(AntDesign, {\n    name: \"lock\",\n    size: 18,\n    color: \"#3465d9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(InputLogin, {\n    placeholder: \"Password:\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }\n  })), React.createElement(ButtonForgotPassword, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(TitleButtonForgotPassword, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }\n  }, \" Esqueceu a senha? \")), React.createElement(ButtonSubmit, {\n    onPress: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(TitleButtonSubmit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 8\n    }\n  }, \" Logar \")));\n}","map":{"version":3,"sources":["/home/rita/Documentos/github/app-loja/mobile/app-store/src/pages/login/index.tsx"],"names":["React","useState","Container","Title","SubTitle","ViewLogin","InputLogin","ButtonForgotPassword","TitleButtonForgotPassword","ButtonSubmit","TitleButtonSubmit","AsyncStorage","useNavigation","Api","Entypo","AntDesign","Login","navigation","email","setEmail","password","setPassword","submit","post","response","data","token","setItem","reset","routes","name","Alert","alert","text"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { Container, Title, SubTitle, ViewLogin, InputLogin,\nButtonForgotPassword, TitleButtonForgotPassword, ButtonSubmit, TitleButtonSubmit } from '../../component/login';\nimport { Alert } from 'react-native';\nimport { AsyncStorage } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Api from '../../services';\nimport { Entypo } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\n\nexport default function Login() {\n  const navigation = useNavigation();\n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n\n  const submit = async() => {\n    if (email != '' && password != '') {\n      let response = await Api.post(\"/login\", { email, password });\n      \n        if (response.data.token) {\n          await AsyncStorage.setItem(\"@token\", response.data.token);\n          navigation.reset({\n              routes:[{name:'Home'}]\n          });\n        }else{\n          Alert.alert(\"Acesso negado\");\n        }\n\n    }else{\n      Alert.alert(\"Opps\", \"Preencha todos os dados.\");\n    }\n  } \n\n  return(\n    <Container>\n      <Title> Fa√ßa login </Title>\n      <SubTitle> Informe os dados abaixo </SubTitle>\n\n      <ViewLogin>\n        <Entypo name=\"email\" size={15} color=\"#3465d9\" />\n      \t<InputLogin placeholder =\"Email:\"\n        onChangeText={(text)=> setEmail(text)} />\n      </ViewLogin>\n\n      <ViewLogin>\n        <AntDesign name=\"lock\" size={18} color=\"#3465d9\" />\n      \t<InputLogin placeholder =\"Password:\"\n        onChangeText={(text)=> setPassword(text)} secureTextEntry />\n      </ViewLogin>\n\n      <ButtonForgotPassword>\n      \t<TitleButtonForgotPassword> Esqueceu a senha? </TitleButtonForgotPassword>\n      </ButtonForgotPassword>\n\n      <ButtonSubmit onPress={submit}>\n      \t<TitleButtonSubmit> Logar </TitleButtonSubmit>\n      </ButtonSubmit>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}